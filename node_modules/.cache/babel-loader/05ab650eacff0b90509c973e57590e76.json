{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchDriverStandings } from \"./thunks\";\nexport const standingsSlice = createSlice({\n  name: \"standings\",\n  initialState: {\n    drivers: [],\n    loading: false,\n    error: \"\",\n    testData: \"\"\n  },\n  reducers: {\n    setTestData: (state, action) => {\n      state.testData = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchDriverStandings.pending]: (state, action) => {\n      state.error = \"\";\n      state.loading = true;\n      state.drivers = [];\n    },\n    [fetchDriverStandings.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.error = \"\";\n      state.drivers = action.payload;\n    },\n    [fetchDriverStandings.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  setTestData\n} = standingsSlice.actions;\nexport default standingsSlice;","map":{"version":3,"sources":["/Volumes/VOL2/React/Shervin-React/psngr1/react-master/src/state/standings/standingsSlice.js"],"names":["createSlice","fetchDriverStandings","standingsSlice","name","initialState","drivers","loading","error","testData","reducers","setTestData","state","action","payload","extraReducers","pending","fulfilled","rejected","message","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,oBAAT,QAAqC,UAArC;AAEA,OAAO,MAAMC,cAAc,GAAGF,WAAW,CAAC;AACxCG,EAAAA,IAAI,EAAE,WADkC;AAExCC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,EADG;AAEZC,IAAAA,OAAO,EAAE,KAFG;AAGZC,IAAAA,KAAK,EAAE,EAHK;AAIZC,IAAAA,QAAQ,EAAE;AAJE,GAF0B;AASxCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACH,QAAN,GAAiBI,MAAM,CAACC,OAAxB;AACD;AAHO,GAT8B;AAcxCC,EAAAA,aAAa,EAAE;AACb,KAACb,oBAAoB,CAACc,OAAtB,GAAgC,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACjDD,MAAAA,KAAK,CAACJ,KAAN,GAAc,EAAd;AACAI,MAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACAK,MAAAA,KAAK,CAACN,OAAN,GAAgB,EAAhB;AACD,KALY;AAMb,KAACJ,oBAAoB,CAACe,SAAtB,GAAkC,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACnDD,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACAK,MAAAA,KAAK,CAACJ,KAAN,GAAc,EAAd;AACAI,MAAAA,KAAK,CAACN,OAAN,GAAgBO,MAAM,CAACC,OAAvB;AACD,KAVY;AAWb,KAACZ,oBAAoB,CAACgB,QAAtB,GAAiC,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAClDD,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACAK,MAAAA,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACL,KAAP,CAAaW,OAA3B;AACD;AAdY;AAdyB,CAAD,CAAlC,C,CAgCP;;AACA,OAAO,MAAM;AAAER,EAAAA;AAAF,IAAkBR,cAAc,CAACiB,OAAvC;AAEP,eAAejB,cAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { fetchDriverStandings } from \"./thunks\";\n\nexport const standingsSlice = createSlice({\n  name: \"standings\",\n  initialState: {\n    drivers: [],\n    loading: false,\n    error: \"\",\n    testData: \"\",\n  },\n\n  reducers: {\n    setTestData: (state, action) => {\n      state.testData = action.payload;\n    },\n  },\n  extraReducers: {\n    [fetchDriverStandings.pending]: (state, action) => {\n      state.error = \"\";\n      state.loading = true;\n      state.drivers = [];\n    },\n    [fetchDriverStandings.fulfilled]: (state, action) => {\n      state.loading = false;\n      state.error = \"\";\n      state.drivers = action.payload;\n    },\n    [fetchDriverStandings.rejected]: (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setTestData } = standingsSlice.actions;\n\nexport default standingsSlice;\n"]},"metadata":{},"sourceType":"module"}