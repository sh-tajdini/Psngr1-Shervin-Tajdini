{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { fetchConstructorStandings } from \"./thunks\";\nexport const constructorSlice = createSlice({\n  name: \"constructors\",\n  initialState: {\n    constructors: [],\n    consloading: false,\n    error: \"\",\n    testData: \"\"\n  },\n  reducers: {\n    setTestData: (state, action) => {\n      state.testData = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchConstructorStandings.pending]: (state, action) => {\n      state.error = \"\";\n      state.consloading = true;\n      state.constructors = [];\n    },\n    [fetchConstructorStandings.fulfilled]: (state, action) => {\n      state.consloading = false;\n      state.error = \"\";\n      state.constructors = action.payload;\n    },\n    [fetchConstructorStandings.rejected]: (state, action) => {\n      state.consloading = false;\n      state.error = action.error.message;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  setTestData\n} = constructorSlice.actions;\nexport default constructorSlice;","map":{"version":3,"sources":["/Volumes/VOL2/React/Shervin-React/psngr1/react-master/src/state/constructor/constructorSlice.js"],"names":["createSlice","fetchConstructorStandings","constructorSlice","name","initialState","constructors","consloading","error","testData","reducers","setTestData","state","action","payload","extraReducers","pending","fulfilled","rejected","message","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,SAASC,yBAAT,QAA0C,UAA1C;AAEA,OAAO,MAAMC,gBAAgB,GAAGF,WAAW,CAAC;AAC1CG,EAAAA,IAAI,EAAE,cADoC;AAE1CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,YAAY,EAAE,EADF;AAEZC,IAAAA,WAAW,EAAE,KAFD;AAGZC,IAAAA,KAAK,EAAE,EAHK;AAIZC,IAAAA,QAAQ,EAAE;AAJE,GAF4B;AAS1CC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACH,QAAN,GAAiBI,MAAM,CAACC,OAAxB;AACD;AAHO,GATgC;AAc1CC,EAAAA,aAAa,EAAE;AACb,KAACb,yBAAyB,CAACc,OAA3B,GAAqC,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACtDD,MAAAA,KAAK,CAACJ,KAAN,GAAc,EAAd;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAoB,IAApB;AACAK,MAAAA,KAAK,CAACN,YAAN,GAAqB,EAArB;AACD,KALY;AAMb,KAACJ,yBAAyB,CAACe,SAA3B,GAAuC,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACxDD,MAAAA,KAAK,CAACL,WAAN,GAAoB,KAApB;AACAK,MAAAA,KAAK,CAACJ,KAAN,GAAc,EAAd;AACAI,MAAAA,KAAK,CAACN,YAAN,GAAqBO,MAAM,CAACC,OAA5B;AACD,KAVY;AAWb,KAACZ,yBAAyB,CAACgB,QAA3B,GAAsC,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACvDD,MAAAA,KAAK,CAACL,WAAN,GAAoB,KAApB;AACAK,MAAAA,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACL,KAAP,CAAaW,OAA3B;AACD;AAdY;AAd2B,CAAD,CAApC,C,CAgCP;;AACA,OAAO,MAAM;AAAER,EAAAA;AAAF,IAAkBR,gBAAgB,CAACiB,OAAzC;AAEP,eAAejB,gBAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { fetchConstructorStandings } from \"./thunks\";\n\nexport const constructorSlice = createSlice({\n  name: \"constructors\",\n  initialState: {\n    constructors: [],\n    consloading: false,\n    error: \"\",\n    testData: \"\",\n  },\n\n  reducers: {\n    setTestData: (state, action) => {\n      state.testData = action.payload;\n    },\n  },\n  extraReducers: {\n    [fetchConstructorStandings.pending]: (state, action) => {\n      state.error = \"\";\n      state.consloading = true;\n      state.constructors = [];\n    },\n    [fetchConstructorStandings.fulfilled]: (state, action) => {\n      state.consloading = false;\n      state.error = \"\";\n      state.constructors = action.payload;\n    },\n    [fetchConstructorStandings.rejected]: (state, action) => {\n      state.consloading = false;\n      state.error = action.error.message;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setTestData } = constructorSlice.actions;\n\nexport default constructorSlice;\n"]},"metadata":{},"sourceType":"module"}